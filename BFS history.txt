#include <stdio.h>

#define MAX 100

void BFS(int graph[MAX][MAX], int n, int start) {
    int visited[MAX] = {0};
    int queue[MAX], front = 0, rear = 0;
    int history[MAX], historyCount = 0;

    visited[start] = 1;
    queue[rear++] = start;

    while (front < rear) {
        int current = queue[front++];
        history[historyCount++] = current; 

        for (int i = 0; i < n; i++) {
            if (graph[current][i] && !visited[i]) {
                visited[i] = 1;
                queue[rear++] = i;
            }
        }
    }

    printf("BFS Expansion Order: ");
    for (int i = 0; i < historyCount; i++) {
        printf("%d", history[i]);
        if (i < historyCount - 1) printf(" -> ");
    }
    printf("\n");
}

int main() {
    int n = 7; // nodes 0..6
    int graph[MAX][MAX] = {0};
    graph[0][1] = graph[1][0] = 1;
    graph[0][2] = graph[2][0] = 1;
    graph[1][3] = graph[3][1] = 1;
    graph[1][4] = graph[4][1] = 1;
    graph[2][5] = graph[5][2] = 1;
    graph[2][6] = graph[6][2] = 1;

    int startNode = 0;

    BFS(graph, n, startNode);

    return 0;
}
